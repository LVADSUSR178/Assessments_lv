# -*- coding: utf-8 -*-
"""LVADSUSR178_PriyadarshiniM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SAYGkIR3iUb-5anL9CA3imlxge3fCLsD
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#1.Load Dataset
d=pd.read_csv('/content/Final Dataset - IPL.csv')
#d.head()
d.info()

#Inference:
#Here it can be seen that, there are totally 74 rows and 20 columns. There are two types of
#data 'int64' that indicates numerical data and 'object' that indicates categorical data.
#From the "Non-Null Count" it can be seen that there no missing values.

#2.Data Cleaning
d.isna()
#Inference:
#The above command returns 'False' which indicates that there are no missing values.
#Since there are no missing values, there is no need to fill or drop them.
d.duplicated()
#Inference:
#The above command returns 'False' which indicates that there no duplicate values.
#If in case there are duplicate values, they can be dropped by using "d.drop_duplicates()" but since they
#absent there is no need for that. Thus the integrity of the dataset is ensured.

#3.Descriptive Statistics
d.describe()
#The above command gives a group of values listing down mean, standard deviation for the numerical data
#present in the given dataset.


median=d.median(numeric_only=True)
#print(f"Median:\n{median}")
mode=d.mode(numeric_only=True)
#print(f"Mode:\n{mode}")
var=d.var(numeric_only=True)
#print(f"Variance:\n{var}")
#Since the "d.describe()" command doesnt include the above functions, they can be found out using
#individual functions supported by pandas.


#Inference:
#To analyse the measures, lets consider an example of 'highscore'. For this particular data,
#Mean=71.716216, Median=68.0, Mode=68.0, Range=28 to 140, Variance=428.699185,
#Standard deviation=20.705.Using this data we can analyse the whole pattern of the match and the
#performance exhibited by every player. By using the average highscore, the players and can be rated
#according to their individual performance.

#4.Data Visualization
from matplotlib import pyplot as plt
d=_df_18
d['first_ings_score'].plot(kind='hist', bins=20, title='first_ings_score')
plt.show()

from matplotlib import pyplot as plt
d=_df_17
d['match_id'].plot(kind='hist', bins=20, title='match_id')
plt.title("First inings score and count of match id")
plt.show()

from matplotlib import pyplot as plt
d=_df_22
d.plot(kind='scatter', x='first_ings_score', y='first_ings_wkts', s=32, alpha=.8)
plt.title("Correlation between First innings score and wicket")
plt.show()

from matplotlib import pyplot as plt
d=pd.read_csv('/content/Final Dataset - IPL.csv')
d['match_winner'].value_counts().plot(kind="pie", autopct='%1.2f%%')
plt.title("Match winner distribution")
plt.ylabel("")
plt.show()

#5. Identifying relationships
#Relationships between toss decision and innings score has been asked to be found out.
import seaborn as sns
import matplotlib.pyplot as plt

d=pd.read_csv('/content/Final Dataset - IPL.csv')

sns.scatterplot(x='venue', y='first_ings_score', data=d, alpha=0.8)
plt.xticks(rotation=45)
plt.title("Correlation between Venue and First inings score")
plt.grid()
plt.show()

sns.scatterplot(x='venue', y='second_ings_score', data=d, alpha=0.8)
plt.xticks(rotation=45)
plt.title("Correlation between Venue and Second inings score")
plt.grid()
plt.show()

#6. Identifying outliers
#Here for identifying outliers, the innings score is considered for every venue.
import seaborn as sns
d=pd.read_csv('/content/Final Dataset - IPL.csv')
sns.boxplot(x='won_by', y='highscore', hue='toss_decision', data=d)
plt.xticks(rotation=45)
plt.title("Outliers between high score and winning startegy")
plt.show()
sns.boxplot(x='venue', y='second_ings_score', hue='toss_decision', data=d)
plt.xticks(rotation=45)
plt.title("Outliers between venue and inings score")
plt.show()

#The outliers with respect to the venue and innings score can be visualized here. The hue is given as
#'toss decision' to differentiate the data based on the categories of "Field" and "Bat". I think it is
#fine to retain the outliers since they give an idea about the extreme values present and using which
#the game strategy can be possibly improved.

#7. Performance trends and venue impact
import matplotlib.pyplot as plt
d=pd.read_csv('/content/Final Dataset - IPL.csv')
plt.figure(figsize=(10,7))
d['venue'].head(20).value_counts().sort_index().plot(kind="line", marker='o', color='blue')
plt.xticks(rotation=45)
plt.title("Performance trends vs Venue")
plt.show()

#8. Player Spotlight
import matplotlib.pyplot as plt
d=pd.read_csv('/content/Final Dataset - IPL.csv')
d['top_scorer'].head(15).value_counts().plot(kind="bar", color='salmon')
plt.title("Player Spotlight")

#9. Summary
The whole dataset represents the data obtained from a cricket match. A lot of information can be obtained
from the dataset which gives details about the score range, performance metrics of the players, impact
of external conditions like venue, toss decisio. Here, it is important to look at the variablities,
central dependencies that occur among the data for clear understanding and visulaiztaion of data.

