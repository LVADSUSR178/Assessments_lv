1. select machine_id 
from l1_maintenance_records 
where month(maintenance_date)=3 and year(maintenance_date)=2024
group by machine_id
having sum(cost) > (select avg(cost) from l1_maintenance_records where month(maintenance_date)=3 and year(maintenance_date)=2024);

2.select count(maintenance_type) as frequent_maintenance, maintenance_type 
from l1_maintenance_records 
where month(maintenance_date)=3 and year(maintenance_date)=2024
group by maintenance_type
order by frequent_maintenance desc;

3.(select technician_name, count(maintenance_type) as num_of_tasks 
from l1_maintenance_records 
where month(maintenance_date)=3 and year(maintenance_date)=2024 
group by technician_name 
order by count(maintenance_type) desc)
union
(select technician_name, avg(cost) as_avg_cost
from l1_maintenance_records
group by technician_name
having avg(cost) > all(select avg(cost) from l1_maintenance_records));

4.select product_id, avg(incident_count_pre_update- incident_count_post_update) as avg_reduction
from l2_updates
group by product_id
order by avg_reduction;

5.select update_id, user_feedback_score
from l2_updates
where incident_count_post_update< incident_count_pre_update
group by update_id
order by user_feedback_score desc
limit 1;

6.select product_id, sum(user_feedback_score) as fs
from l2_updates
where incident_count_post_update< incident_count_pre_update
group by product_id
order by fs
limit 1;

7.select p.patient_name, count(v.visit_id) as visits
from  l3_patients p
join  l3_visits v on p.patient_id=v.patient_id
join l3_treatments t on v.visit_id=t.visit_id
group by p.patient_name
order by visits desc;

8.select facility_name, count(visit_id) as num_of_visits
from l3_facilities f
join l3_visits v
on f.facility_id=v.facility_id
where month(v.visit_date)=3 and year(v.visit_date)=2024
group by facility_name
order by num_of_visits desc;

9.select p.insurance_provider, count(v.visit_id) as visits
from  l3_patients p
join  l3_visits v on p.patient_id=v.patient_id
join l3_treatments t on v.visit_id=t.visit_id
where quarter(visit_date)=1 and year(visit_date)=2024 and t.outcome="Complicated"
group by p.insurance_provider
order by visits desc;

10.select l4_products.product_name, l4_products.category, l4_sales.quantity 
from l4_products, l4_sales
where l4_sales.quantity in(select quantity from l4_sales order by quantity desc );

11.create view combined_sales as select * from sales, stores where sum(sales)>

12.select st.region
from stores st
join sales s on st.store_id=s.store_id
join  products p on s.product_id=p.product_id
where month(sale_date)=3 and year(sale_date)=2024;

