# -*- coding: utf-8 -*-
"""LVADSUSR178_PriyadarshiniM_Anomaly.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13n6JajIxSWqwl6lLbKU_s-pKKCYDC5hj
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.ensemble import IsolationForest

d=pd.read_csv('/content/anomaly_train.csv')

d.shape

d.head()

d.Type.value_counts()

d.isnull().sum()

from sklearn.preprocessing import OneHotEncoder

o=OneHotEncoder(drop='first',dtype='int32')

o_fit=o.fit_transform(d[['Type','Location']])

o_fit.toarray().shape

o_fit.toarray()

o.categories_

d.drop(['Type','Location'],axis=1,inplace=True)

feature_names=o.get_feature_names_out().tolist()
d[feature_names]=o_fit.toarray()

feature_names

d.head()

d.drop('TransactionID',axis=1,inplace=True)

features_taken=['Amount','User','Time']

X=d[features_taken]

isolationf=IsolationForest(contamination=0.05)

isolationf.fit(X)

y_pred=isolationf.predict(X)

y_pred

d['anomaly_score']=isolationf.decision_function(X)

d['anomaly']=y_pred

d.head()

from sklearn.preprocessing import StandardScaler
ss=StandardScaler()
d[features_taken]=ss.fit_transform(d[features_taken])

anomalies=d[d['anomaly']<0]

d.dtypes

#Scatterplots
plt.scatter(d['Time'],d['Amount'],color='r',label='normal')
plt.scatter(anomalies['Time'],anomalies['Amount'], color='y',label='anomalies')
plt.show()



