# -*- coding: utf-8 -*-
"""LVADSUSR178_PriyadarshiniM_Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x6-8SGcmvYYqc5659xGmw1pk-Ir57F81
"""

import numpy as np
import pandas as pd

d=pd.read_csv('/content/Fare prediction.csv')

d.head()

d.info()

#Data cleaning
d.isnull().sum()
#No null values are found

d.duplicated().sum()
#no duplicate values are found

#Removal of outliers
Q1 = d.quantile(0.25)
Q3 = d.quantile(0.75)
IQR = Q3 - Q1
data = d[~((d < (Q1 - 1.5 * IQR)) | (d > (Q3 + 1.5 * IQR))).any(axis=1)]

#EDA
import matplotlib.pyplot as plt
import seaborn as sns

#HeatMap
plt.figure(figsize=(10, 8))
sns.heatmap(d.corr(), annot=True, cmap='rainbow')
plt.title("Univariate Analysis of Fare Prediction")

#Histogram
d.hist(figsize=(10, 8), color='blue')
plt.tight_layout()

#Pairplot of numerical features
sns.pairplot(d)

#Encoding of data
from sklearn.preprocessing import LabelEncoder
len=LabelEncoder()
d['key']=len.fit_transform(d['key'])
d['pickup_datetime']=len.fit_transform(d['pickup_datetime'])

d.info()

#Feature selection
x=d.drop(columns=['fare_amount'])
y=d['fare_amount']

#Splitting of datasets
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test=train_test_split(x,y, test_size=0.3, random_state=10)

#Scaling of data
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

x_train=pd.DataFrame(scaler.fit_transform(x_train[list(x.columns)]),
                                    columns=x.columns)
x_test=pd.DataFrame(scaler.transform(x_test[list(x.columns)]),
                                    columns=x.columns)

#Model building
from sklearn.linear_model import LinearRegression
model=LinearRegression()
model.fit(x_train, y_train)
pred=model.predict(x_test)
print(pred)

#Model Evaluation
from sklearn.metrics import mean_squared_error, r2_score
mse=mean_squared_error(pred, y_test)
rmse=mean_squared_error(pred, y_test, squared=False)
rs=r2_score(pred, y_test)
print(f"MSE:\n {mse}")
print(f"RMSE:\n {rmse}")
print(f"R2_score:\n {rs}")