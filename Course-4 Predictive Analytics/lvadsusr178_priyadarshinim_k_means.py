# -*- coding: utf-8 -*-
"""LVADSUSR178_PriyadarshiniM_K-Means.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U4o6SOuMgBPh5U_29F9pu3PIEYA9oIX_
"""

import numpy as np
import pandas as pd

d=pd.read_csv('/content/Mall_Customers.csv')

d.info()

#A. Data Preprocessing and exploration
d.isnull().sum()

d.duplicated().sum()

for i in d.columns.tolist():
  sns.boxplot(data=d,x=i)
  plt.title(i)
  plt.show()

import seaborn as sns
sns.distplot(d['Annual Income (k$)'],kde=True, color='blue')
plt.show()

from sklearn.preprocessing import LabelEncoder
len=LabelEncoder()
d['Genre']=len.fit_transform(d['Genre'])

d.info()

#Normalization
from sklearn.preprocessing import StandardScaler
ss=StandardScaler()

cols=['Annual Income (k$)', 'Spending Score (1-100)']
sc=ss.fit_transform(d[cols])

sc

#B.Optimal number of cluster determination
from sklearn.cluster import KMeans

#Elbow method
inertia=[]
for i in range(1,8):
  model=KMeans(n_clusters=i, random_state=10)
  model.fit_transform(sc)
  inertia.append(model.inertia_)

import matplotlib.pyplot as plt
plt.figure(figsize=(10,5))
plt.plot(range(1,8), inertia, marker='o', color='blue' )
plt.show()

#C. Clustering algorithm apllication
num_of_clusters=5
model=KMeans(n_clusters=num_of_clusters, random_state=10)
d['cluster']=model.fit_predict(sc)
d.head()

#D.Cluster Analysis
import seaborn as sns
plt.figure(figsize=(10,5))
sns.scatterplot(x='Annual Income (k$)',y = 'Spending Score (1-100)',hue='cluster',palette=['green','red','blue','black','yellow'],legend=True,data=d)
plt.title("Visualization of clusters")
plt.show()

#E. Strategy development based on clusters
#From this scenario we can observe that the 5 clusters plotted are based on variations from different genders
#and age group. When those factors are concentrated, the spending score will increase.