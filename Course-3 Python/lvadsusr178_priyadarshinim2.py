# -*- coding: utf-8 -*-
"""LVADSUSR178_PriyadarshiniM2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h6IEaSjPFch3dMiS5fD6lAjahhfZVPYR
"""

import numpy as np

#Lab Questions
#1.
arr=np.array([1,2,3,4,5])
min_val=np.min(arr)
print("Minimum value:",min_val)
max_val=np.max(arr)
print("Maximum value:", max_val)
sum=np.sum(arr)
print(f"Sum:{sum}")
mean=np.mean(arr)
print(f"Mean: {mean}")
std_dev=np.std(arr)
print(f"Standard Deviation: {std_dev}")

#2
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

#3
import pandas as pd
import numpy as np
data= {"English":[30,40,40],"Maths":[45,50,50], "Science":[35,35,45], "History":[45,50,50]}
df=pd.DataFrame(data)
print("Student Data:",df)
avg=df["Maths"].aggregate('mean')
print(f"Average Score in Maths: {avg}")
avg=df["Science"].aggregate('mean')
print(f"Average Score in Science: {avg}")
avg=df["History"].aggregate('mean')
print(f"Average Score in History: {avg}")

#4 Sensor Data
readings= np.linspace(15,25, num=24)
print(f"The temperature readings are as follows: {readings}")

#5.
import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
print(daily_closing_prices)
mean=np.mean(daily_closing_prices[::5])
print(f"Average price over a window_size of 5 is: {mean}")

#6

#7 matrix
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
determinant=np.diagonal(properties_matrix)
print(determinant)

#8 boolean
a=np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]])
mask= a>5
print(a[mask])

#9
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
df=pd.DataFrame(data, columns=['Name','Cities'])
print(df)
# import numpy as np
# mask= df['Age'] <45
# print(mask)

#10
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
df=pd.DataFrame(data)
d=df.groupby(['Salesperson']).mean('Sales')
print(f"Average of Sales per Sales_person: {d}")
avg=df['Sales'].aggregate('mean')
print(f"Average Sales: {avg}")

#11

#12

#13
import pandas as pd
df=pd.read_csv("/content/Q13_sports_team_stats.csv")
df.head()
wins=df.Wins
loss= df.GamesPlayed-df.Wins
print(f"Win_ratio is:{wins}:{loss}")
avg=df['Wins'].aggregate('mean')
print(f"Average score is: {avg}")

#14
import pandas as pd
df=pd.read_csv("/content/Q14_customer_purchases.csv")
df.head()

#15
import pandas as pd
df=pd.read_csv("/content/Q15_student_grades.csv")
df.head()
high=df.sort_values('Grade', ascending=False)
print(f"Top 3 Subjects: {high}")
low=df.sort_values('Grade', ascending=True)
print(f"Least scored subjects: {low}")